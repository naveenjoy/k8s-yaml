apiVersion: apps/v1
kind: Ingress
metadata:
  name: cafe-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx-ingress"   # Using this annotation you can select the ingress controller
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
    - host: cafe.example.com
      http:
        paths:
          - path: /tea
            backend:
              serviceName: tea
              servicePort: 80
          - path: /coffee
            backend:
              serviceName: coffee
              servicePort: 80

---
apiVersion: v1
kind: Service
metadata:
  name: tea
  labels:
    name: tea
spec:
  ports:
    - port: 80
      targetPort: 80
  selector:
    name: tea

---
apiVersion: v1
kind: Service
metadata:
  name: coffee
  labels:
    name: coffee
spec:
  ports:
    - port: 80
      targetPort: 80
  selector:
    name: coffee

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tea
  labels:
    tier: frontend
    app:  nginx
    name: tea

  annotations:
    description: A stateless Nginx Pod deployment for the Tea service
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  minReadySeconds: 0
  progressDeadlineSeconds: 600

  selector:              # The spec.selector is used by this Deployment to identify the Pods its managing
    matchLabels:         # The spec.selector.matchLabels must match one of the labels in spec.template.metadata.labels
      tier: frontend
      app: nginx
      name: tea

  template:
    metadata:
      labels:
        tier: frontend   # Labels must be assigned to the Pods controlled by a Deployment and targeted by a service.
        app:  nginx
        name: tea
    spec:
      volumes:
        - name: www-data-share
          emptyDir: {}
      containers:
        - name: nginx
          image: nginx:1.13.8
          volumeMounts:
            - mountPath: /usr/share/nginx/html
              name: www-data-share
              readOnly: true
          readinessProbe:
            httpGet:
              path: /tea
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 10
          ports:
            - containerPort: 80

        - name: git-sync
          image: openweb/git-sync:0.0.1
          volumeMounts:
            - mountPath: /usr/share/nginx/html
              name: www-data-share
          env:
            - name: GIT_SYNC_REPO
              value: "https://github.com/naveenjoy/naveenjoy.github.io.git"
            - name: GIT_SYNC_DEST
              value: "/usr/share/nginx/html/tea"
            - name: GIT_SYNC_BRANCH
              value: "tea"
            - name: GIT_SYNC_REV
              value: "FETCH_HEAD"
            - name: GIT_SYNC_WAIT
              value: "10"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: coffee
  labels:
    tier: frontend
    app:  nginx
    name: coffee
  annotations:
    description: A stateless Nginx Pod deployment for the Coffee service
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  minReadySeconds: 0
  progressDeadlineSeconds: 600

  selector:              # The spec.selector is used by this Deployment to identify the Pods its managing
    matchLabels:         # The spec.selector.matchLabels must match one of the labels in spec.template.metadata.labels
      tier: frontend
      app: nginx
      name: coffee

  template:
    metadata:
      labels:
        tier: frontend   # Labels must be assigned to the Pods controlled by a Deployment and targeted by a service.
        app:  nginx
        name: coffee
    spec:
      volumes:
        - name: www-data-share
          emptyDir: {}
      containers:
        - name: nginx
          image: nginx:1.13.8
          volumeMounts:
            - mountPath: /usr/share/nginx/html
              name: www-data-share
              readOnly: true
          readinessProbe:
            httpGet:
              path: /coffee
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 10
          ports:
            - containerPort: 80

        - name: git-sync
          image: openweb/git-sync:0.0.1
          volumeMounts:
            - mountPath: /usr/share/nginx/html
              name: www-data-share
          env:
            - name: GIT_SYNC_REPO
              value: "https://github.com/naveenjoy/naveenjoy.github.io.git"
            - name: GIT_SYNC_DEST
              value: "/usr/share/nginx/html/coffee"
            - name: GIT_SYNC_BRANCH
              value: "coffee"
            - name: GIT_SYNC_REV
              value: "FETCH_HEAD"
            - name: GIT_SYNC_WAIT
              value: "10"
